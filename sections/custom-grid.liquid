{% schema %}
{
  "name": "Product Grid with Popup",
  "settings": [],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "id": "product",
          "type": "product",
          "label": "Choose product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Grid with Popup"
    }
  ]
}
{% endschema %}

<style>
.product-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
}

.product-block {
  border: 1px solid #ddd;
  padding: 10px;
  cursor: pointer;
  text-align: center;
  transition: transform 0.2s ease;
}
.product-block:hover {
  transform: scale(1.05);
}

.product-block img {
  width: 100%;
  height: auto;
}

.popup {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.7);
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.popup-content {
  background: #fff;
  padding: 20px;
  border-radius: 8px;
  max-width: 500px;
  width: 90%;
  position: relative;
}

.popup-close {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 20px;
  cursor: pointer;
}
</style>

<div class="product-grid">
  {% for block in section.blocks %}
    {% assign product = all_products[block.settings.product] %}
    {% if product %}
      <div class="product-block" data-handle="{{ product.handle }}">
        <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
        <h3>{{ product.title }}</h3>
        <p>{{ product.price | money }}</p>
      </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Popup -->
<div class="popup">
  <div class="popup-content"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const blocks = document.querySelectorAll('.product-block');
  const popup = document.querySelector('.popup');
  const popupContent = document.querySelector('.popup-content');

  blocks.forEach(block => {
    block.addEventListener('click', () => {
      const handle = block.dataset.handle;
      console.log("Clicked:", handle); // debug

      fetch(window.Shopify.routes.root + `products/${handle}.js`)
        .then(res => res.json())
        .then(product => {
          console.log("Product loaded:", product); // debug

          let variantOptions = '';

          if (product.variants.length > 1) {
            variantOptions += '<form id="popup-form">';
            product.options.forEach((option, i) => {
              variantOptions += `<label>${option}</label><select name="option${i+1}">`;
              product.variants.forEach(variant => {
                variantOptions += `<option value="${variant.id}">${variant['option'+(i+1)]}</option>`;
              });
              variantOptions += '</select>';
            });
            variantOptions += `<button type="submit" class="btn">Add to Cart</button></form>`;
          } else {
            variantOptions += `<form id="popup-form">
                                  <input type="hidden" name="id" value="${product.variants[0].id}">
                                  <button type="submit" class="btn">Add to Cart</button>
                               </form>`;
          }

          popupContent.innerHTML = `
            <span class="popup-close">&times;</span>
            <h2>${product.title}</h2>
            <p><strong>${(product.price/100).toFixed(2)} ${Shopify.currency.active}</strong></p>
            <p>${product.description}</p>
            ${variantOptions}
          `;

          popup.style.display = 'flex';

          // Close popup
          popupContent.querySelector('.popup-close').addEventListener('click', () => {
            popup.style.display = 'none';
          });
        })
        .catch(err => console.error("Error fetching product:", err));
    });
  });

  popup.addEventListener('click', (e) => {
    if (e.target === popup) popup.style.display = 'none';
  });
});
</script>
