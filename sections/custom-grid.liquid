{% schema %}
{
  "name": "Custom  Grid ",
  "settings": [
    { "type": "product", "id": "product_1", "label": "Select product 1" },
    { "type": "product", "id": "product_2", "label": "Select product 2" },
    { "type": "product", "id": "product_3", "label": "Select product 3" },
    { "type": "product", "id": "product_4", "label": "Select product 4" },
    { "type": "product", "id": "product_5", "label": "Select product 5" },
    { "type": "product", "id": "product_6", "label": "Select product 6" }
  ],
  "presets": [
    {
      "name": "Custom Product Grid",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<div class="product-grid">
  {% for i in (1..6) %}
    {% capture setting_id %}product_{{ i }}{% endcapture %}
    {% assign selected_handle = section.settings[setting_id] %}
    {% assign product = all_products[selected_handle] %}

    {% if product %}
      <div class="product-card" data-product-handle="{{ product.handle }}">
        {% if product.featured_image %}
          <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
        {% endif %}
        <h3>{{ product.title }}</h3>
        <p>{{ product.price | money }}</p>
        <button class="open-popup" data-handle="{{ product.handle }}">View Details</button>
      </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Popup -->
<div id="product-popup" class="popup hidden">
  <div class="popup-content">
    <span class="close-popup">&times;</span>
    <div id="popup-details"></div>
    <div id="popup-variants"></div>
    <button id="add-to-cart">Add to Cart</button>
  </div>
</div>

<style>
  .product-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
  }
  .product-card {
    border: 1px solid #ddd;
    padding: 15px;
    text-align: center;
  }
  .popup {
    position: fixed;
    top:0; left:0; right:0; bottom:0;
    background: rgba(0,0,0,0.6);
    display:flex;
    align-items:center;
    justify-content:center;
  }
  .popup.hidden { display:none; }
  .popup-content {
    background: #fff;
    padding: 20px;
    max-width: 500px;
    width: 100%;
    position: relative;
  }
  .close-popup {
    position: absolute;
    top: 10px; right: 15px;
    cursor: pointer;
    font-size: 20px;
  }
</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const popup = document.getElementById("product-popup");
  const popupDetails = document.getElementById("popup-details");
  const popupVariants = document.getElementById("popup-variants");
  const addToCartBtn = document.getElementById("add-to-cart");
  let selectedProductHandle = null;
  let selectedVariantId = null;

  document.querySelectorAll(".open-popup").forEach(btn => {
    btn.addEventListener("click", function() {
      selectedProductHandle = this.dataset.handle;
      fetch(`/products/${selectedProductHandle}.js`)
        .then(res => res.json())
        .then(product => {
          popupDetails.innerHTML = `
            <h2>${product.title}</h2>
            <p>${product.description}</p>
            <p>Price: ${ (product.price/100).toFixed(2) } ${Shopify.currency.active}</p>
          `;
          // Variants dropdown
          if(product.variants.length > 1) {
            popupVariants.innerHTML = `
              <label>Select Variant:</label>
              <select id="variant-select">
                ${product.variants.map(v => `
                  <option value="${v.id}" data-title="${v.title}">${v.title} - ${(v.price/100).toFixed(2)} ${Shopify.currency.active}</option>
                `).join('')}
              </select>
            `;
            selectedVariantId = product.variants[0].id;
            document.getElementById("variant-select").addEventListener("change", function() {
              selectedVariantId = this.value;
            });
          } else {
            popupVariants.innerHTML = "";
            selectedVariantId = product.variants[0].id;
          }
          popup.classList.remove("hidden");
        });
    });
  });

  document.querySelector(".close-popup").addEventListener("click", () => {
    popup.classList.add("hidden");
  });

  addToCartBtn.addEventListener("click", function() {
    if(!selectedVariantId) return;
    // Add selected product to cart
    fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: selectedVariantId, quantity: 1 })
    }).then(res => res.json())
      .then(item => {
        // Special rule: if variant title contains "Black / Medium", add Soft Winter Jacket
        if(item.title.includes("Black") && item.title.includes("Medium")) {
          fetch("/products/soft-winter-jacket.js")
            .then(res => res.json())
            .then(sw => {
              const swVariantId = sw.variants[0].id;
              fetch("/cart/add.js", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ id: swVariantId, quantity: 1 })
              });
            });
        }
        alert("Added to cart!");
        popup.classList.add("hidden");
      });
  });
});
</script>
