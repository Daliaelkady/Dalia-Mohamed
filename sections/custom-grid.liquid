{% schema %}
{
  "name": "Custom Grid ",
  "settings": [
    { "type": "product", "id": "product_1", "label": "Product 1" },
    { "type": "product", "id": "product_2", "label": "Product 2" },
    { "type": "product", "id": "product_3", "label": "Product 3" },
    { "type": "product", "id": "product_4", "label": "Product 4" },
    { "type": "product", "id": "product_5", "label": "Product 5" },
    { "type": "product", "id": "product_6", "label": "Product 6" }
  ]
}
{% endschema %}

<div class="product-grid">
  {% for i in (1..6) %}
    {% capture setting_id %}product_{{ i }}{% endcapture %}
    {% assign selected_handle = section.settings[setting_id] %}
    {% assign product = all_products[selected_handle] %}

    {% if product %}
      <div class="product-card" data-product-handle="{{ product.handle }}">
        {% if product.featured_image %}
          <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
        {% endif %}
        <h3>{{ product.title }}</h3>
        <p>{{ product.price | money }}</p>
        <button class="open-popup" data-handle="{{ product.handle }}">View Details</button>
      </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Popup -->
<div id="product-popup" class="hidden" style="position: fixed; top: 0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.6); display:flex; align-items:center; justify-content:center; z-index:9999;">
  <div style="background:white; padding:20px; max-width:500px; width:90%; position:relative;">
    <button id="close-popup" style="position:absolute; top:10px; right:10px;">✖</button>
    <div id="popup-details">Loading...</div>
    <button id="add-to-cart">Add to Cart</button>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const popup = document.getElementById("product-popup");
  const popupDetails = document.getElementById("popup-details");
  const addToCartBtn = document.getElementById("add-to-cart");
  const closePopup = document.getElementById("close-popup");
  let selectedProductHandle = null;

  // Open popup on "View Details"
  document.querySelectorAll(".open-popup").forEach(btn => {
    btn.addEventListener("click", function() {
      selectedProductHandle = this.dataset.handle;
      console.log("Fetching product:", selectedProductHandle);

      fetch(`/products/${selectedProductHandle}.js`)
        .then(res => {
          if (!res.ok) throw new Error("Product not found: " + selectedProductHandle);
          return res.json();
        })
        .then(product => {
          console.log("Product JSON:", product);

          // Build variants dropdown
          let variantOptions = "";
          if (product.variants && product.variants.length > 0) {
            variantOptions = `
              <label for="variant">Select variant:</label>
              <select id="variant-select">
                ${product.variants.map(v => `<option value="${v.id}">${v.title} - ${(v.price/100).toFixed(2)} ${Shopify.currency.active}</option>`).join("")}
              </select>
            `;
          }

          popupDetails.innerHTML = `
            <h2>${product.title}</h2>
            <p>${product.description || "No description"}</p>
            <p>Price: ${(product.price/100).toFixed(2)} ${Shopify.currency.active}</p>
            ${variantOptions}
          `;
          popup.classList.remove("hidden");
        })
        .catch(err => {
          console.error("Error loading product:", err);
          popupDetails.innerHTML = `<p style="color:red;">Could not load product details.</p>`;
          popup.classList.remove("hidden");
        });
    });
  });

  // Add to cart button
  addToCartBtn.addEventListener("click", function() {
    const variantSelect = document.getElementById("variant-select");
    let variantId = variantSelect ? variantSelect.value : null;

    if (!variantId) {
      alert("Please select a variant");
      return;
    }

    console.log("Adding to cart:", variantId);

    fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: variantId, quantity: 1 })
    })
    .then(res => res.json())
    .then(data => {
      console.log("Added to cart:", data);

      // Special rule: if Black + Medium → also add Soft Winter Jacket
      const selectedVariant = data.variant_title || "";
      if (selectedVariant.includes("Black") && selectedVariant.includes("Medium")) {
        console.log("Trigger rule: Adding Soft Winter Jacket");

        fetch("/products/soft-winter-jacket.js")
          .then(res => res.json())
          .then(jacket => {
            const jacketVariantId = jacket.variants[0].id;
            return fetch("/cart/add.js", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ id: jacketVariantId, quantity: 1 })
            });
          })
          .then(() => console.log("Soft Winter Jacket auto-added"));
      }

      alert("Added to cart!");
      popup.classList.add("hidden");
    })
    .catch(err => console.error("Cart error:", err));
  });

  // Close popup
  closePopup.addEventListener("click", () => popup.classList.add("hidden"));
});
</script>
