{% schema %}
{
  "name": "Product Grid with Popup",
  "settings": [],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select Product"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Product Grid with Popup"
    }
  ]
}
{% endschema %}

<div class="product-grid">
  {% for block in section.blocks %}
    {% assign product = all_products[block.settings.product] %}
    {% if product %}
      <div class="product-card">
        <img src="{{ product.featured_image | img_url: '400x400' }}" alt="{{ product.title }}">
        <h3>{{ product.title }}</h3>
        <p>{{ product.price | money }}</p>
        <button class="details-btn" 
          data-handle="{{ product.handle }}"
          data-title="{{ product.title }}"
          data-price="{{ product.price | money }}"
          data-description="{{ product.description | escape }}"
          data-variants='{{ product.variants | json }}'
          data-id="{{ product.id }}">
          Details
        </button>
      </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Popup -->
<div id="popup" class="popup hidden">
  <div class="popup-content">
    <span class="close">&times;</span>
    <img id="popup-img" src="" alt="">
    <h2 id="popup-title"></h2>
    <p id="popup-price"></p>
    <p id="popup-desc"></p>

    <label for="variant-select">Choose Variant:</label>
    <select id="variant-select"></select>

    <button id="add-to-cart">Add to Cart</button>
  </div>
</div>

<style>
.product-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
}
.product-card {
  border: 1px solid #ddd;
  padding: 15px;
  text-align: center;
  border-radius: 10px;
}
.product-card img {
  max-width: 100%;
  border-radius: 10px;
}
.details-btn {
  margin-top: 10px;
  padding: 10px 15px;
  border: none;
  background: #000;
  color: #fff;
  cursor: pointer;
  border-radius: 5px;
}
.popup {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.7);
  display: flex;
  justify-content: center;
  align-items: center;
}
.popup.hidden { display: none; }
.popup-content {
  background: #fff;
  padding: 20px;
  width: 90%;
  max-width: 500px;
  border-radius: 10px;
  position: relative;
}
.popup-content img { max-width: 100%; border-radius: 10px; }
.close {
  position: absolute; top: 10px; right: 15px;
  font-size: 24px; cursor: pointer;
}
#add-to-cart {
  margin-top: 15px;
  padding: 12px 20px;
  background: green;
  color: #fff;
  border: none;
  border-radius: 8px;
  cursor: pointer;
}
@media(max-width:768px) {
  .product-grid { grid-template-columns: repeat(2, 1fr); }
}
@media(max-width:480px) {
  .product-grid { grid-template-columns: 1fr; }
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const popup = document.getElementById("popup");
  const popupTitle = document.getElementById("popup-title");
  const popupPrice = document.getElementById("popup-price");
  const popupDesc = document.getElementById("popup-desc");
  const popupImg = document.getElementById("popup-img");
  const variantSelect = document.getElementById("variant-select");
  const addToCartBtn = document.getElementById("add-to-cart");
  let currentVariants = [];
  let currentProductHandle = "";
  
  // Open popup
  document.querySelectorAll(".details-btn").forEach(btn => {
    btn.addEventListener("click", () => {
      popup.classList.remove("hidden");
      popupTitle.textContent = btn.dataset.title;
      popupPrice.textContent = btn.dataset.price;
      popupDesc.textContent = btn.dataset.description;
      popupImg.src = btn.previousElementSibling.src;
      currentVariants = JSON.parse(btn.dataset.variants);
      currentProductHandle = btn.dataset.handle;

      variantSelect.innerHTML = "";
      currentVariants.forEach(variant => {
        const option = document.createElement("option");
        option.value = variant.id;
        option.textContent = variant.title;
        variantSelect.appendChild(option);
      });
    });
  });

  // Close popup
  document.querySelector(".close").addEventListener("click", () => {
    popup.classList.add("hidden");
  });

  // Add to Cart
  addToCartBtn.addEventListener("click", () => {
    const selectedVariantId = variantSelect.value;

    fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id: selectedVariantId, quantity: 1 })
    })
    .then(res => res.json())
    .then(data => {
      alert("Added to cart!");

      // Check for Black + Medium condition
      const selectedVariant = currentVariants.find(v => v.id == selectedVariantId);
      if (selectedVariant && selectedVariant.title.includes("Black") && selectedVariant.title.includes("Medium")) {
        // Add Soft Winter Jacket automatically
        fetch('/products/soft-winter-jacket.js')
          .then(res => res.json())
          .then(product => {
            const jacketVariantId = product.variants[0].id;
            fetch('/cart/add.js', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ id: jacketVariantId, quantity: 1 })
            });
          });
      }
    });
  });
});
</script>
