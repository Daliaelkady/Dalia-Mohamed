{% schema %}
{
  "name": "Product Grid with Popup",
  "settings": [],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select product"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Grid with Popup",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<div class="product-grid">
  {% for block in section.blocks %}
    {% assign product = all_products[block.settings.product] %}
    {% if product %}
      <div class="product-card" data-handle="{{ product.handle }}">
        <img src="{{ product.featured_image | img_url: '400x400' }}" alt="{{ product.title }}">
        <h3>{{ product.title }}</h3>
        <p>{{ product.price | money }}</p>
        <button class="details-btn" data-handle="{{ product.handle }}">View Details</button>
      </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Popup Modal -->
<div id="product-popup" class="popup">
  <div class="popup-content">
    <span class="close-popup">&times;</span>
    <div class="popup-body">
      <img id="popup-image" src="" alt="">
      <h2 id="popup-title"></h2>
      <p id="popup-price"></p>
      <p id="popup-description"></p>
      <form id="variant-form"></form>
      <button id="add-to-cart-btn">Add to Cart</button>
    </div>
  </div>
</div>

<style>
.product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
}
.product-card {
  border: 1px solid #ddd;
  padding: 15px;
  text-align: center;
  background: #fff;
  border-radius: 10px;
}
.product-card img {
  width: 100%;
  border-radius: 8px;
}
.details-btn {
  margin-top: 10px;
  background: black;
  color: white;
  padding: 10px 15px;
  border: none;
  cursor: pointer;
  border-radius: 6px;
}
.popup {
  display: none;
  position: fixed;
  z-index: 9999;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.7);
}
.popup-content {
  background: #fff;
  margin: 5% auto;
  padding: 20px;
  width: 90%;
  max-width: 600px;
  border-radius: 12px;
  position: relative;
}
.close-popup {
  position: absolute;
  top: 10px; right: 20px;
  cursor: pointer;
  font-size: 22px;
}
#add-to-cart-btn {
  background: #000;
  color: #fff;
  padding: 12px;
  border: none;
  border-radius: 8px;
  margin-top: 15px;
  width: 100%;
  cursor: pointer;
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const popup = document.getElementById("product-popup");
  const closePopup = document.querySelector(".close-popup");
  const popupTitle = document.getElementById("popup-title");
  const popupPrice = document.getElementById("popup-price");
  const popupImage = document.getElementById("popup-image");
  const popupDescription = document.getElementById("popup-description");
  const variantForm = document.getElementById("variant-form");
  const addToCartBtn = document.getElementById("add-to-cart-btn");

  let selectedProduct = null;
  let variants = [];

  document.querySelectorAll(".details-btn").forEach(btn => {
    btn.addEventListener("click", async () => {
      const handle = btn.getAttribute("data-handle");
      const response = await fetch(`/products/${handle}.js`);
      const product = await response.json();

      selectedProduct = product;
      variants = product.variants;

      popupTitle.textContent = product.title;
      popupPrice.textContent = Shopify.formatMoney(product.price);
      popupImage.src = product.featured_image;
      popupDescription.textContent = product.description;

      variantForm.innerHTML = "";
      variants.forEach(variant => {
        const option = document.createElement("div");
        option.innerHTML = `
          <label>
            <input type="radio" name="variant" value="${variant.id}">
            ${variant.title} - ${Shopify.formatMoney(variant.price)}
          </label>
        `;
        variantForm.appendChild(option);
      });

      popup.style.display = "block";
    });
  });

  closePopup.addEventListener("click", () => popup.style.display = "none");

  addToCartBtn.addEventListener("click", async () => {
    const selectedVariantId = document.querySelector("input[name='variant']:checked")?.value;
    if (!selectedVariantId) {
      alert("Please select a variant");
      return;
    }

    // Add main product to cart
    await fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: selectedVariantId, quantity: 1 })
    });

    // Auto add "Soft Winter Jacket" if Black + Medium is chosen
    const chosenVariant = variants.find(v => v.id == selectedVariantId);
    if (chosenVariant && chosenVariant.title.includes("Black") && chosenVariant.title.includes("Medium")) {
      const jacket = await fetch("/products/soft-winter-jacket.js").then(res => res.json());
      const jacketVariant = jacket.variants[0];
      await fetch("/cart/add.js", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id: jacketVariant.id, quantity: 1 })
      });
    }

    alert("Added to cart!");
    popup.style.display = "none";
  });
});
</script>
