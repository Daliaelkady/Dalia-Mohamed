{% schema %}
{
  "name": "Product Grid with Popup",
  "settings": [
    {
      "type": "product_list",
      "id": "products",
      "label": "Select Products",
      "limit": 6
    },
    {
      "type": "font_picker",
      "id": "custom_font",
      "label": "Custom Font",
      "default": "sans-serif"
    }
  ],
  "presets": [
    {
      "name": "Grid with Popup",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<div class="custom-grid" style="font-family: {{ section.settings.custom_font }};">
  {% for product in section.settings.products %}
    {% assign product_obj = all_products[product] %}
    {% if product_obj %}
      <div class="grid-item" data-handle="{{ product_obj.handle }}">
        <img src="{{ product_obj.featured_image | img_url: '400x' }}" alt="{{ product_obj.title }}">
        <h3>{{ product_obj.title }}</h3>
        <p>{{ product_obj.price | money }}</p>
        <button class="details-btn" data-handle="{{ product_obj.handle }}">Details</button>
      </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Popup Modal -->
<div id="product-popup" class="popup hidden">
  <div class="popup-content">
    <span class="close-btn">&times;</span>
    <div class="popup-body">
      <img id="popup-image" src="" alt="">
      <h2 id="popup-title"></h2>
      <p id="popup-price"></p>
      <p id="popup-description"></p>
      <form id="variant-form">
        <label for="variant-select">Choose Variant:</label>
        <select id="variant-select"></select>
        <button type="submit" class="add-to-cart">Add to Cart</button>
      </form>
    </div>
  </div>
</div>

<style>
/* Grid Styling */
.custom-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 20px;
  padding: 20px;
}

.grid-item {
  border: 1px solid #ddd;
  padding: 15px;
  text-align: center;
  border-radius: 10px;
  background: #fff;
  transition: transform 0.2s ease;
}

.grid-item:hover {
  transform: scale(1.05);
}

.grid-item img {
  width: 100%;
  border-radius: 10px;
}

.details-btn {
  margin-top: 10px;
  padding: 10px 20px;
  background: black;
  color: white;
  border: none;
  cursor: pointer;
  border-radius: 8px;
}

.details-btn:hover {
  background: #444;
}

/* Popup Styling */
.popup {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.popup.hidden {
  display: none;
}

.popup-content {
  background: #fff;
  padding: 30px;
  border-radius: 12px;
  width: 90%;
  max-width: 500px;
  text-align: center;
  position: relative;
}

.close-btn {
  position: absolute;
  top: 15px;
  right: 20px;
  font-size: 28px;
  cursor: pointer;
}

.add-to-cart {
  margin-top: 15px;
  padding: 10px 20px;
  background: green;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
}

.add-to-cart:hover {
  background: darkgreen;
}

/* Mobile Responsive */
@media(max-width: 600px) {
  .custom-grid {
    grid-template-columns: 1fr;
  }
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const popup = document.getElementById("product-popup");
  const closeBtn = document.querySelector(".close-btn");
  const popupImage = document.getElementById("popup-image");
  const popupTitle = document.getElementById("popup-title");
  const popupPrice = document.getElementById("popup-price");
  const popupDescription = document.getElementById("popup-description");
  const variantSelect = document.getElementById("variant-select");
  const variantForm = document.getElementById("variant-form");

  document.querySelectorAll(".details-btn").forEach(btn => {
    btn.addEventListener("click", async (e) => {
      const handle = e.target.dataset.handle;

      // Fetch product JSON
      const response = await fetch(`/products/${handle}.js`);
      const product = await response.json();

      // Populate popup
      popupImage.src = product.featured_image;
      popupTitle.textContent = product.title;
      popupPrice.textContent = (product.price / 100).toFixed(2) + " " + Shopify.currency.active;
      popupDescription.textContent = product.description;

      // Populate variants
      variantSelect.innerHTML = "";
      product.variants.forEach(v => {
        let option = document.createElement("option");
        option.value = v.id;
        option.textContent = v.title + " - " + (v.price / 100).toFixed(2) + " " + Shopify.currency.active;
        variantSelect.appendChild(option);
      });

      popup.classList.remove("hidden");
    });
  });

  closeBtn.addEventListener("click", () => {
    popup.classList.add("hidden");
  });

  variantForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    const variantId = variantSelect.value;

    // Add selected product to cart
    await fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: variantId, quantity: 1 })
    });

    // Fetch variant info to check Black + Medium condition
    const variantText = variantSelect.options[variantSelect.selectedIndex].text;
    if (variantText.includes("Black") && variantText.includes("Medium")) {
      // Add Soft Winter Jacket automatically
      const response = await fetch(`/products/soft-winter-jacket.js`);
      const softProduct = await response.json();
      const firstVariant = softProduct.variants[0];
      await fetch("/cart/add.js", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id: firstVariant.id, quantity: 1 })
      });
    }

    alert("Product added to cart!");
    popup.classList.add("hidden");
  });
});
</script>
