{% schema %}
{
  "name": "Product Grid with Popup",
  "settings": [
    {
      "type": "product",
      "id": "upsell_product",
      "label": "Upsell Product (e.g. Soft Winter Jacket)"
    }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select product"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Custom Product Grid"
    }
  ]
}
{% endschema %}

<div class="custom-grid">
  {% for block in section.blocks %}
    {% if block.settings.product %}
      {% assign product = all_products[block.settings.product] %}
      <div class="grid-item">
        <img src="{{ product.featured_image | image_url: width: 400 }}" alt="{{ product.title }}">
        <h3>{{ product.title }}</h3>
        <p>{{ product.price | money }}</p>
        <button class="details-btn" data-handle="{{ product.handle }}">
          View Details
        </button>
      </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Popup -->
<div id="product-popup" class="popup hidden">
  <div class="popup-content">
    <span id="popup-close">&times;</span>
    <div id="popup-body">
      <!-- Dynamic content will load here -->
    </div>
  </div>
</div>

<style>
.custom-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
}
.grid-item {
  border: 1px solid #ddd;
  padding: 15px;
  text-align: center;
  background: #fff;
  border-radius: 8px;
}
.grid-item img {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
}
.details-btn {
  margin-top: 10px;
  padding: 10px 15px;
  background: black;
  color: white;
  border: none;
  cursor: pointer;
  border-radius: 5px;
}
.details-btn:hover {
  background: #333;
}
.popup {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.6);
  display: flex;
  justify-content: center;
  align-items: center;
}
.popup.hidden {
  display: none;
}
.popup-content {
  background: #fff;
  padding: 20px;
  width: 90%;
  max-width: 600px;
  border-radius: 10px;
  position: relative;
}
#popup-close {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 24px;
  cursor: pointer;
}
</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const popup = document.getElementById("product-popup");
  const popupBody = document.getElementById("popup-body");
  const closeBtn = document.getElementById("popup-close");

  document.querySelectorAll(".details-btn").forEach(btn => {
    btn.addEventListener("click", function() {
      const handle = this.getAttribute("data-handle");

      // Fetch product JSON
      fetch(`/products/${handle}.js`)
        .then(res => res.json())
        .then(product => {
          let variantsHtml = '';
          product.variants.forEach(v => {
            variantsHtml += `<option value="${v.id}" data-title="${v.title}">${v.title} - ${Shopify.formatMoney(v.price)}</option>`;
          });

          popupBody.innerHTML = `
            <h2>${product.title}</h2>
            <p>${Shopify.formatMoney(product.price)}</p>
            <p>${product.description}</p>
            <select id="variant-select">${variantsHtml}</select>
            <button id="add-to-cart">Add to Cart</button>
          `;

          // Add to cart functionality
          document.getElementById("add-to-cart").addEventListener("click", function() {
            const selectedVariant = document.getElementById("variant-select").value;
            const selectedTitle = document.getElementById("variant-select")
              .options[document.getElementById("variant-select").selectedIndex]
              .dataset.title;

            // Add main product
            fetch("/cart/add.js", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ id: selectedVariant, quantity: 1 })
            })
            .then(res => res.json())
            .then(() => {
              // Check special condition
              if (selectedTitle.includes("Black") && selectedTitle.includes("Medium")) {
                const upsell = "{{ section.settings.upsell_product }}";
                if (upsell) {
                  fetch(`/products/${upsell}.js`)
                    .then(res => res.json())
                    .then(upsellProd => {
                      fetch("/cart/add.js", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ id: upsellProd.variants[0].id, quantity: 1 })
                      });
                    });
                }
              }
              alert("Product added to cart!");
            });
          });

          popup.classList.remove("hidden");
        });
    });
  });

  closeBtn.addEventListener("click", () => popup.classList.add("hidden"));
  popup.addEventListener("click", (e) => {
    if (e.target === popup) popup.classList.add("hidden");
  });
});
</script>
