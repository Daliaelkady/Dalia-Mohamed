{% schema %}
{
  "name": "Custom Grid",
  "settings": [],
  "blocks": [],
  "presets": [
    {
      "name": "Custom Grid"
    }
  ]
}
{% endschema %}

<div class="custom-grid">
  <!-- Example Products – replace handles with your real product handles -->
  <div class="custom-product" data-handle="t-shirt">
    <img src="{{ all_products['t-shirt'].featured_image | img_url: 'medium' }}" alt="T-shirt">
    <h3>{{ all_products['t-shirt'].title }}</h3>
    <p>{{ all_products['t-shirt'].price | money }}</p>
    <button class="view-btn">View</button>
  </div>

  <div class="custom-product" data-handle="cap">
    <img src="{{ all_products['cap'].featured_image | img_url: 'medium' }}" alt="Cap">
    <h3>{{ all_products['cap'].title }}</h3>
    <p>{{ all_products['cap'].price | money }}</p>
    <button class="view-btn">View</button>
  </div>
</div>

<!-- Popup -->
<div class="popup" style="display:none;">
  <div class="popup-content"></div>
</div>

<style>
.custom-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 20px;
}
.custom-product {
  text-align: center;
  border: 1px solid #eee;
  padding: 15px;
  border-radius: 10px;
  background: #fff;
}
.custom-product img {
  width: 100%;
  border-radius: 6px;
}
.view-btn {
  margin-top: 10px;
  padding: 8px 15px;
  background: #000;
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}
.popup {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
}
.popup-content {
  background: #fff;
  padding: 20px;
  border-radius: 12px;
  max-width: 500px;
  width: 100%;
  position: relative;
}
.popup-close {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 22px;
  cursor: pointer;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const products = document.querySelectorAll('.custom-product');
  const popup = document.querySelector('.popup');
  const popupContent = document.querySelector('.popup-content');

  products.forEach(prod => {
    prod.querySelector('.view-btn').addEventListener('click', () => {
      const handle = prod.dataset.handle;

      // Get product details from Shopify
      fetch(`/products/${handle}.js`)
        .then(res => res.json())
        .then(product => {
          let formHTML = '';
          if (product.variants.length > 1) {
            formHTML += `<form id="popup-form">`;
            formHTML += `<select name="variant">`;
            product.variants.forEach(v => {
              formHTML += `<option value="${v.id}">${v.title} – ${(v.price/100).toFixed(2)} ${Shopify.currency.active}</option>`;
            });
            formHTML += `</select>
                         <button type="submit" class="btn">Add to Cart</button>
                         </form>`;
          } else {
            formHTML = `<form id="popup-form">
                          <input type="hidden" name="id" value="${product.variants[0].id}">
                          <button type="submit" class="btn">Add to Cart</button>
                        </form>`;
          }

          popupContent.innerHTML = `
            <span class="popup-close">&times;</span>
            <h2>${product.title}</h2>
            <p><strong>${(product.price/100).toFixed(2)} ${Shopify.currency.active}</strong></p>
            <p>${product.description}</p>
            ${formHTML}
          `;
          popup.style.display = 'flex';

          // Close
          popupContent.querySelector('.popup-close').addEventListener('click', () => {
            popup.style.display = 'none';
          });

          // Handle Add to Cart
          const form = popupContent.querySelector('#popup-form');
          form.addEventListener('submit', (e) => {
            e.preventDefault();
            const variantId = form.querySelector('[name="variant"]')?.value || product.variants[0].id;

            fetch('/cart/add.js', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ id: variantId, quantity: 1 })
            })
            .then(r => r.json())
            .then(data => {
              alert(product.title + " added to cart!");
              popup.style.display = 'none';
            });
          });
        });
    });
  });

  // Click outside popup closes it
  popup.addEventListener('click', e => {
    if (e.target === popup) popup.style.display = 'none';
  });
});
</script>
