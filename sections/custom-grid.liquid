{% schema %}
{
  "name": "CustomGridwithPopup",
  "settings": [],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select product"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Custom Grid with Popup",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<div class="custom-grid">
  {% for block in section.blocks %}
    {% assign product = all_products[block.settings.product] %}
    {% if product %}
      <div class="grid-item" data-handle="{{ product.handle }}">
        <img src="{{ product.featured_image | img_url: '400x' }}" alt="{{ product.title }}">
        <h3>{{ product.title }}</h3>
        <p class="price">{{ product.price | money }}</p>
        <button class="open-popup" data-handle="{{ product.handle }}">View Details</button>
      </div>
    {% endif %}
  {% endfor %}
</div>

<!-- Popup Modal -->
<div id="product-popup" class="popup hidden">
  <div class="popup-content">
    <span class="close-popup">&times;</span>
    <div id="popup-body"></div>
  </div>
</div>

<style>
/* Grid Styling */
.custom-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  gap: 25px;
  padding: 40px;
}

.grid-item {
  background: #fff;
  padding: 20px;
  text-align: center;
  border-radius: 14px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}
.grid-item:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 18px rgba(0,0,0,0.15);
}
.grid-item img {
  max-width: 100%;
  border-radius: 12px;
}
.grid-item h3 {
  margin: 12px 0 6px;
  font-size: 18px;
  font-weight: 600;
}
.grid-item .price {
  color: #444;
  font-size: 16px;
  margin-bottom: 12px;
}
.grid-item button {
  background: #111;
  color: #fff;
  padding: 10px 16px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 14px;
  transition: background 0.2s ease;
}
.grid-item button:hover {
  background: #333;
}

/* Popup Overlay */
.popup {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0,0,0,0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}
.popup.hidden { display: none; }

/* Popup Content */
.popup-content {
  background: #fff;
  padding: 30px;
  width: 95%;
  max-width: 500px;
  border-radius: 16px;
  position: relative;
  box-shadow: 0 6px 20px rgba(0,0,0,0.25);
  animation: fadeInUp 0.3s ease;
}
@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Close Button */
.close-popup {
  position: absolute;
  top: 12px;
  right: 15px;
  cursor: pointer;
  font-size: 24px;
  font-weight: bold;
  color: #666;
}
.close-popup:hover {
  color: #000;
}

/* Popup Body Styling */
#popup-body h2 {
  font-size: 22px;
  margin-bottom: 8px;
}
#popup-body p {
  margin-bottom: 14px;
  line-height: 1.5;
  color: #555;
}
#popup-body select {
  width: 100%;
  padding: 10px;
  margin-bottom: 14px;
  border-radius: 8px;
  border: 1px solid #ddd;
  font-size: 14px;
}
#popup-body button {
  background: #111;
  color: #fff;
  padding: 12px 20px;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  font-size: 15px;
  font-weight: 600;
  width: 100%;
  transition: background 0.3s ease;
}
#popup-body button:hover {
  background: #333;
}

/* Mobile Responsiveness */
@media (max-width: 600px) {
  .custom-grid {
    grid-template-columns: 1fr 1fr;
    gap: 15px;
    padding: 20px;
  }
  .popup-content {
    padding: 20px;
  }
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const popup = document.getElementById("product-popup");
  const popupBody = document.getElementById("popup-body");
  const closeBtn = document.querySelector(".close-popup");

  // Open popup
  document.querySelectorAll(".open-popup").forEach(btn => {
    btn.addEventListener("click", async () => {
      const handle = btn.dataset.handle;

      // Fetch product JSON
      const res = await fetch(`/products/${handle}.js`);
      const product = await res.json();

      // Build variants dropdown
      let variantOptions = "";
      product.variants.forEach(v => {
        variantOptions += `<option value="${v.id}">${v.title} - ${Shopify.formatMoney(v.price)}</option>`;
      });

      // Insert details
      popupBody.innerHTML = `
        <h2>${product.title}</h2>
        <p><strong>Price:</strong> ${Shopify.formatMoney(product.price)}</p>
        <p>${product.description}</p>
        <label><strong>Choose variant:</strong></label>
        <select id="variant-select">${variantOptions}</select>
        <button id="add-to-cart">Add to Cart</button>
      `;

      // Show popup
      popup.classList.remove("hidden");

      // Add to cart logic
      document.getElementById("add-to-cart").addEventListener("click", async () => {
        const selectedVariant = document.getElementById("variant-select").value;

        // Add chosen product
        await fetch("/cart/add.js", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id: selectedVariant, quantity: 1 })
        });

        // Special condition: if Black + Medium â†’ add Soft Winter Jacket too
        const chosenVariant = product.variants.find(v => v.id == selectedVariant);
        if (chosenVariant && chosenVariant.title.includes("Black") && chosenVariant.title.includes("Medium")) {
          const jacket = await fetch("/products/soft-winter-jacket.js`).then(r => r.json());
          await fetch("/cart/add.js", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ id: jacket.variants[0].id, quantity: 1 })
          });
        }

        alert("Added to cart!");
        popup.classList.add("hidden");
      });
    });
  });

  // Close popup
  closeBtn.addEventListener("click", () => popup.classList.add("hidden"));
  popup.addEventListener("click", (e) => {
    if (e.target === popup) popup.classList.add("hidden");
  });
});
</script>
